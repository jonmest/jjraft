syntax = "proto3";

package raft;

option java_package = "org.jraft.rpc";
option java_multiple_files = true;
option java_outer_classname = "RaftProto";

message NodeId { string id = 1; }

message LogEntry{
  int64 index = 1;
  int64 term = 2;
  bytes data = 3;
}

message RequestVoteRequest {
  int64 term = 1;
  NodeId candidate_id = 2;
  int64 last_log_index = 3;
  int64 last_log_term = 4;
}

message RequestVoteResponse {
  int64 term = 1;
  bool vote_granted = 2;
}

message AppendEntriesRequest {
  int64 term = 1;
  NodeId leader_id = 2;
  int64 prev_log_index = 3;
  int64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  int64 leader_commit = 6;
}

message AppendEntriesResponse {
  int64 term = 1;
  bool success = 2;
  int64 match_index = 3;        // highest replicated index (if success)
  int64 conflict_term = 4;      // term at conflict (if failed)
  int64 conflict_start_index = 5; // first index of that conflicting term
}

message InstallSnapshotRequest {
  int64 term = 1;
  NodeId leader_id = 2;
  int64 last_included_index = 3;
  int64 last_included_term = 4;
  bytes data = 5;   // raw chunk or whole snapshot
  bool done = 6;    // true on final chunk
}

message InstallSnapshotResponse {
  int64 term = 1;
  bool accepted = 2;
}

service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc InstallSnapshot(stream InstallSnapshotRequest) returns (InstallSnapshotResponse);
}